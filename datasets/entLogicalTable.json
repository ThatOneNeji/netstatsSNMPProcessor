{
    "name": "entLogicalTable",
    "type": "table",
    "mib": "ENTITY-MIB",
    "oid": ".1.3.6.1.2.1.47.1.2.1",
    "parent": "entityLogical",
    "description": "This table contains one row per logical entity. For agents that implement more than one naming scope, at least one entry must exist. Agents which instantiate all MIB objects within a single naming scope are not required to implement this table.",
    "objects": [
        {
            ".1.3.6.1.2.1.47.1.2.1.1.1": {
                "name": "entLogicalIndex",
                "datatype": "INTEGER32",
                "columntype": "index",
                "order": "1",
                "description": "The value of this object uniquely identifies the logical entity. The value should be a small positive integer; index values for different logical entities are not necessarily contiguous.",
                "status": "Current"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.2": {
                "name": "entLogicalDescr",
                "datatype": "OCTETSTR",
                "columntype": "column",
                "order": "2",
                "description": "A textual description of the logical entity. This object should contain a string that identifies the manufacturer's name for the logical entity, and should be set to a distinct value for each version of the logical entity.",
                "status": "Current",
                "range": "0..255"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.3": {
                "name": "entLogicalType",
                "datatype": "OBJECTID",
                "columntype": "column",
                "order": "3",
                "description": "An indication of the type of logical entity. This will typically be the OBJECT IDENTIFIER name of the node in the SMI's naming hierarchy which represents the major MIB module, or the majority of the MIB modules, supported by the logical entity. For example: a logical entity of a regular host/router -> mib-2 a logical entity of a 802.1d bridge -> dot1dBridge a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt If an appropriate node in the SMI's naming hierarchy cannot be identified, the value 'mib-2' should be used.",
                "status": "Current"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.4": {
                "name": "entLogicalCommunity",
                "datatype": "OCTETSTR",
                "columntype": "column",
                "order": "4",
                "description": "An SNMPv1 or SNMPv2C community-string, which can be used to access detailed management information for this logical entity. The agent should allow read access with this community string (to an appropriate subset of all managed objects) and may also return a community string based on the privileges of the request used to read this object. Note that an agent may return a community string with read-only privileges, even if this object is accessed with a read-write community string. However, the agent must take care not to return a community string that allows more privileges than the community string used to access this object. A compliant SNMP agent may wish to conserve naming scopes by representing multiple logical entities in a single 'default' naming scope. This is possible when the logical entities, represented by the same value of entLogicalCommunity, have no object instances in common. For example, 'bridge1' and 'repeater1' may be part of the main naming scope, but at least one additional community string is needed to represent 'bridge2' and 'repeater2'. Logical entities 'bridge1' and 'repeater1' would be represented by sysOREntries associated with the 'default' naming scope. For agents not accessible via SNMPv1 or SNMPv2C, the value of this object is the empty string. This object may also contain an empty string if a community string has not yet been assigned by the agent, or if no community string with suitable access rights can be returned for a particular SNMP request. Note that this object is deprecated. Agents which implement SNMPv3 access should use the entLogicalContextEngineID and entLogicalContextName objects to identify the context associated with each logical entity. SNMPv3 agents may return a zero-length string for this object, or may continue to return a community string (e.g., tri-lingual agent support).",
                "status": "Deprecated",
                "range": "0..255"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.5": {
                "name": "entLogicalTAddress",
                "datatype": "OCTETSTR",
                "columntype": "column",
                "order": "5",
                "description": "The transport service address by which the logical entity receives network management traffic, formatted according to the corresponding value of entLogicalTDomain. For snmpUDPDomain, a TAddress is 6 octets long: the initial 4 octets contain the IP-address in network-byte order and the last 2 contain the UDP port in network-byte order. Consult 'Transport Mappings for the Simple Network Management Protocol' (STD 62, RFC 3417 [RFC3417]) for further information on snmpUDPDomain.",
                "status": "Current",
                "range": "1..255"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.6": {
                "name": "entLogicalTDomain",
                "datatype": "OBJECTID",
                "columntype": "column",
                "order": "6",
                "description": "Indicates the kind of transport service by which the logical entity receives network management traffic. Possible values for this object are presently found in the Transport Mappings for Simple Network Management Protocol' (STD 62, RFC 3417 [RFC3417]).",
                "status": "Current"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.7": {
                "name": "entLogicalContextEngineID",
                "datatype": "OCTETSTR",
                "columntype": "column",
                "order": "7",
                "description": "The authoritative contextEngineID that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated 'entLogicalTAddress/entLogicalTDomain' pair. This object, together with the associated entLogicalContextName object, defines the context associated with a particular logical entity, and allows access to SNMP engines identified by a contextEngineId and contextName pair. If no value has been configured by the agent, a zero-length string is returned, or the agent may choose not to instantiate this object at all.",
                "status": "Current",
                "range": "0..32"
            }
        },
        {
            ".1.3.6.1.2.1.47.1.2.1.1.8": {
                "name": "entLogicalContextName",
                "datatype": "OCTETSTR",
                "columntype": "column",
                "order": "8",
                "description": "The contextName that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated 'entLogicalTAddress/entLogicalTDomain' pair. This object, together with the associated entLogicalContextEngineID object, defines the context associated with a particular logical entity, and allows access to SNMP engines identified by a contextEngineId and contextName pair. If no value has been configured by the agent, a zero-length string is returned, or the agent may choose not to instantiate this object at all.",
                "status": "Current",
                "range": "0..255"
            }
        }
    ]
}
